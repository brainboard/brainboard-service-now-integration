<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_854636_b_board.BrainboardUtility</api_name>
        <caller_access/>
        <client_callable>true</client_callable>
        <description/>
        <mobile_callable>false</mobile_callable>
        <name>BrainboardUtility</name>
        <sandbox_callable>true</sandbox_callable>
        <script><![CDATA[var BrainboardUtility = Class.create();
BrainboardUtility.token = gs.getProperty("x_854636_b_board.api.token");
BrainboardUtility.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {

	getAllArchitectureTemplateIDs: function () {
		try {
			var ids = [];
			var r = new sn_ws.RESTMessageV2('x_854636_b_board.Brainboard - apac1', 'ListArchitectureTemplates');
			r.setStringParameterNoEscape('token', BrainboardUtility.token);
			var response = r.execute();
			var responseBody = response.getBody();
			var httpStatus = response.getStatusCode();
			var resp = JSON.parse(responseBody);
			resp.forEach(function (res) {
				ids.push(res.uuid);
			});
			return ids;
		}
		catch (ex) {
			var message = ex.message;
		}
	},

	createVariable: function (data, archTplSysId) {
		var variableGr = new GlideRecord("x_854636_b_board_variable");
		variableGr.initialize();
		variableGr.setValue("mandatry", data.mandatry);
		variableGr.setValue("architecture_template", archTplSysId);
		variableGr.setValue("value", data.value);
		variableGr.setValue("type", data.type);
		variableGr.setValue("description", data.description);
		variableGr.setValue("default", data.default);
		variableGr.setValue("name", data.name);
		variableGr.setValue("id", data.uuid);
		variableGr.insert();
	},

	updateVariable: function (data, archTplSysId) {
		var variableGr = new GlideRecord("x_854636_b_board_variable");
		if (variableGr.get("id", data.uuid)) {
			variableGr.setValue("mandatry", data.mandatry);
			variableGr.setValue("architecture_template", archTplSysId);
			variableGr.setValue("value", data.value);
			variableGr.setValue("type", data.type);
			variableGr.setValue("description", data.description);
			variableGr.setValue("default", data.default);
			variableGr.setValue("name", data.name);
			variableGr.setValue("id", data.uuid);
			variableGr.update();
		}
	},

	filterEnvironments: function (projectSysId) {
		var environmentGr = new GlideRecord("x_854636_b_board_environment");
		environmentGr.addQuery("project", projectSysId);
		environmentGr.query();
		var envIDs = [];
		while (environmentGr.next()) {
			envIDs.push(environmentGr.sys_id.toString());
		}
		return 'sys_idIN' + envIDs.join(',');
	},

	getCloneRequestPayload: function (ritmSysId) {
		var ritmGR = new GlideRecord("sc_req_item");
		if (ritmGR.get(ritmSysId)) {
			var payload = {
				"description": ritmGR.variables.description.toString(),
				"environment": "a74b0151-6609-4449-b9b5-4137244550e8",
				"name": ritmGR.variables.name.toString(),
				"project": "56372873-f859-491c-8518-9c252b87a4d5",
				"variable_values": {
				},
				"workflow_template": "4ab76dea-62da-4efa-b9df-c85301b988d8"
			};
			var variableGr = new GlideRecord("x_854636_b_board_variable");
			variableGr.addQuery("architecture_template.catalog_item", ritmGR.cat_item);
			variableGr.query();
			while (variableGr.next()) {
				var varLabel = variableGr.catalog_variable.name;
				payload.variable_values[variableGr.name] = ritmGR.variables[varLabel].toString();
			}
			return JSON.stringify(payload);
		}
	},

	getArchTplFieldValue: function (archTplUUID, fieldName) {
		var archTplGr = new GlideRecord("x_854636_b_board_architecture_template");
		if (archTplGr.get("uuid", archTplUUID)) {
			return archTplGr.getValue(fieldName);
		}
	},

	cloneArchitectureTemplate: function (payload) {
			var r = new sn_ws.RESTMessageV2('x_854636_b_board.Brainboard - apac1', 'Clone Architecture Template');
			r.setStringParameterNoEscape('template', 'fce28582-6d86-4aaf-b034-f97697f964e8');
			r.setStringParameterNoEscape('payload', payload);
			r.setStringParameterNoEscape('token', 'bb_JDJhJDEwJC5lVDdvaW83UTRHUHgyVVpSQVRoRWVYNHpYN3JxZnlmVnpaeWdCM25ZV2dZci4wMzZpRjFl');
			var response = r.execute();
			var responseBody = response.getBody();
			var httpStatus = response.getStatusCode();
			return responseBody;
	},

	type: 'BrainboardUtility'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>yohanes.yilma</sys_created_by>
        <sys_created_on>2025-04-02 09:57:22</sys_created_on>
        <sys_id>e19347df83e4e2103e53f065eeaad3da</sys_id>
        <sys_mod_count>58</sys_mod_count>
        <sys_name>BrainboardUtility</sys_name>
        <sys_package display_value="Brainboard" source="x_854636_b_board">7062797e832822103e53f065eeaad32b</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Brainboard">7062797e832822103e53f065eeaad32b</sys_scope>
        <sys_update_name>sys_script_include_e19347df83e4e2103e53f065eeaad3da</sys_update_name>
        <sys_updated_by>yohanes.yilma</sys_updated_by>
        <sys_updated_on>2025-04-12 21:24:34</sys_updated_on>
    </sys_script_include>
</record_update>
